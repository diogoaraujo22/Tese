-----------------------------
-- HD Wallets Structure
-----------------------------


sig PrivateKey{
	generates : one PublicKey -- 
}

sig PublicKey{
	addresses : one BAddr -- cryptocurrency address
} 

sig BAddr{}

sig MasterPrivateKey{
	creates : set PrivateKey,   		  -- list of private keys  
	originates : set MasterPrivateKey,	  -- children master private keys  
	determinates : one MasterPublicKey -- master public key generated
}


sig MasterPublicKey{
	derives : set PublicKey
}


--------------------
-- Functions
--------------------

-- função que retorna as master public keys orfãs
fun orpahnMasterPublicKeys : set MasterPublicKey
	{{mpk : MasterPublicKey | mpk not in MasterPrivateKey.determinates}}


-- função que retorna as public keys orfãs
fun orpahnPublicKeys : set PublicKey
	{{p : PublicKey | p not in PrivateKey.generates+MasterPublicKey.derives}}


-- função que retorna todas as public keys originadas por uma master private key
fun pubKeys[mpk : one MasterPrivateKey] : set PublicKey
	{{p : PublicKey | p in (mpk.creates.generates + mpk.^originates.creates.generates)}}
--^originates = originates + originates.originates + originates.originates.originates


--------------------
-- Predicates
--------------------


-- 1. creates injective
pred propInjectiveCreates
	{creates.~creates in iden}


-- 2. originates injective
pred propInjectiveOriginate
	{originates.~originates in iden}


-- 3. generates injective
pred propInjectiveGenerates
	{generates.~generates in iden}


-- 4. addresses injective
pred propInjectiveAddresses
	{addresses.~addresses in iden}
 
-- 5. uma master private key não se pode gerar a ela mesma 
pred propNoConfusionOriginates
	{no originates & iden}


-- 6. at least one master private key
pred propAtLeastOneMasterPrivateKey
	{some MasterPrivateKey}


-- 7. one master private key creates at least one private key or one master private key
pred propAtLeastOnecCreatesOrOneOriginates
	{all mpk : MasterPrivateKey | some mpk.creates or some mpk.originates}


-- 8. no cycle in originates chain
pred propNoCycleOriginates
	{no ^originates & iden}


-- 9. derives injective
pred propInjectiveDerives
	{derives.~derives in iden}


-- 10. a MPubK (Master Public Key) derives only the public keys generated by privates keys whose Master Private Key generated MPubK
pred propCycledChainMPK
	{all mpk : MasterPrivateKey | one mpubk : mpk.determinates | mpubk.derives = pubKeys[mpk]}


-- 11. no orphan Master Public Keys
pred propNoOrpahnMasterPublicKeys
	{no orpahnMasterPublicKeys}


-- 12. no orphan Public Keys
pred propNoOrpahnPublicKeys
	{no orpahnPublicKeys}


-- 13. determinates injective
pred propInjectiveDeterminates
	{determinates.~determinates in iden}

fact Facts{

	-- 1.
	propInjectiveCreates

	-- 2.
	propInjectiveOriginate

	-- 3.
	propInjectiveGenerates

	-- 4.
	propInjectiveAddresses

	-- 5.
	propNoConfusionOriginates

	-- 6.
	propAtLeastOneMasterPrivateKey

	-- 7.
	propAtLeastOnecCreatesOrOneOriginates

	-- 8.
	propNoCycleOriginates

	-- 9. 
	propInjectiveDerives

	-- 10.
	propCycledChainMPK 

	-- 11.
	propNoOrpahnMasterPublicKeys

	-- 12.
	propNoOrpahnPublicKeys

	-- 13.
	propInjectiveDeterminates
}


-----------
-- Run
-----------

run{

--	some 
--	one mpk : MasterPrivateKey |  #mpk.creates = 1 and #mpk.originates = 1 

--all mpk : MasterPrivateKey |  #mpk.originates = 1 

} for 15 --but exactly 2 MasterPrivateKey
